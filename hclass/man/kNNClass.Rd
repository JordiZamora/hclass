% Generated by roxygen2 (4.1.0.9001): do not edit by hand
% Please edit documentation in R/kNN.R
\name{kNNClass}
\alias{kNNClass}
\title{kNN classifier}
\usage{
kNNClass(TrainData, trainclass, LpSortIndex, TestDataClass = NULL, k = 1)
}
\arguments{
\item{TrainData}{A data frame with n columns of features.}

\item{trainclass}{A vector of classes corresponding to the data in TrainData.}

\item{LpSortIndex}{A matrix with indexes of the neighbours sorted by distance. Each row corresponds to a data point in testing set. Each column must correspond to the kth nearest neighbour in the testing set.}

\item{TestDataClass}{A vector of classes corresponding to the data in the test set.}

\item{k}{An array of numeric values corresponding to the order of the nearest neighbour classifier.}
}
\value{
Returns a list with the predicted class and/or accuracy according to the matrix of indexes LpSortIndex. If TestDataclass is not provided only the predicted class is returned.
}
\description{
Classify the input with a k nearest neighbors classifier.
}
\examples{
Data <- mtcars[,c("mpg", "wt", "cyl")]
nTrain <- 25
p <- 2
k <- 1
TrainData <- Data[1:nTrain, c("mpg", "wt")]
TrainDataClass <- Data[1:nTrain, "cyl"]
TestData <- Data[(nTrain+1):nrow(mtcars), c("mpg", "wt")]
TestDataClass <- Data[(nTrain+1):nrow(mtcars), "cyl"]

# Calculate distante between each element o the TestData and the training set
TestSortedDist <- SortDist(TrainData,TestData,2)

kNN.out <- kNNClass(TrainData,
                    TrainDataClass,
                    TestSortedDist,
                    TestDataClass, k=k)
}

